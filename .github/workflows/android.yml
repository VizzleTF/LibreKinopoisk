name: Optimized Android CI/CD

on:
  push:
    tags: ['v*']

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx4g

jobs:
  prepare-cache:
    runs-on: ubuntu-latest
    outputs:
      gradle-cache-key: ${{ steps.gradle-cache.outputs.cache-primary-key }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Gradle Cache
        id: gradle-cache
        uses: burrunan/gradle-cache-action@v2
        with:
          gradle-version: wrapper
          arguments: dependencies
          cache-disabled: false

  build-matrix:
    needs: prepare-cache
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [assembleRelease, testRelease]
      fail-fast: false
      max-parallel: 2
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Create keystore
        if: matrix.task == 'assembleRelease'
        run: |
          mkdir -p app/keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore/release.keystore
          
      - name: Execute Gradle Task
        uses: burrunan/gradle-cache-action@v2
        with:
          gradle-version: wrapper
          arguments: ${{ matrix.task }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          
      - name: Upload APK artifact
        if: matrix.task == 'assembleRelease'
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk

  release:
    needs: build-matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          
      - name: Rename APK
        run: mv app-release.apk MovieTorr-${{ github.ref_name }}.apk
        
      - name: Get commit history
        id: get_commit_history
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          LATEST_TAG=$(git describe --tags --abbrev=0)
          if git describe --tags --abbrev=0 $LATEST_TAG^ >/dev/null 2>&1; then
            SECOND_LATEST_TAG=$(git describe --tags --abbrev=0 $LATEST_TAG^)
            COMMIT_HISTORY=$(git log $SECOND_LATEST_TAG..$LATEST_TAG --pretty=format:"- %s")
          else
            COMMIT_HISTORY=$(git log --pretty=format:"- %s")
          fi
          
          echo "commit_history<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_HISTORY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: MovieTorr ${{ steps.get_commit_history.outputs.version }}
          body: |
            ## üé¨ MovieTorr ${{ steps.get_commit_history.outputs.version }}
            
            ### üìù –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏:
            ${{ steps.get_commit_history.outputs.commit_history }}

            ### üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞:
            1. –°–∫–∞—á–∞–π—Ç–µ APK —Ñ–∞–π–ª
            2. –†–∞–∑—Ä–µ—à–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏–∑ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          files: MovieTorr-${{ github.ref_name }}.apk
