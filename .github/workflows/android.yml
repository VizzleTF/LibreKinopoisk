name: Fast Android CI/CD

on:
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle setup (with cache)
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          gradle-home-cache-cleanup: true

      - name: Create keystore
        run: |
          mkdir -p app/keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore/release.keystore

      - name: Build Release APK
        run: ./gradlew assembleRelease --no-configuration-cache --build-cache --parallel --no-daemon
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Prepare release file
        run: mv app/build/outputs/apk/release/app-release.apk MovieTorr-${{ github.ref_name }}.apk

      - name: Get release notes
        id: notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          LATEST_TAG=$(git describe --tags --abbrev=0)
          if git describe --tags --abbrev=0 $LATEST_TAG^ >/dev/null 2>&1; then
            SECOND_LATEST_TAG=$(git describe --tags --abbrev=0 $LATEST_TAG^)
            HISTORY=$(git log $SECOND_LATEST_TAG..$LATEST_TAG --pretty=format:"- %s")
          else
            HISTORY=$(git log --pretty=format:"- %s")
          fi
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "## 🎬 MovieTorr $VERSION
                ### 📝 Изменения в этой версии:
                $HISTORY

                ### 📥 Установка:
                1. Скачайте APK-файл MovieTorr-$VERSION.apk из релиза
                2. Разрешите установку из неизвестных источников
                3. Установите приложение на устройство" >> $GITHUB_OUTPUT
                          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: MovieTorr ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.notes }}
          files: MovieTorr-${{ github.ref_name }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
